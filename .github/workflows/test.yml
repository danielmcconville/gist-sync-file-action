name: 'units-test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
env:
  fileName: 'test.json'

jobs:
  # unit tests
  units:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm test
    env:
      GIST_PAT: ${{ secrets.GIST_PAT }}

  # test action works running from the graph
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo '{}' > $fileName
      - name: Create Gist
        uses: ./
        id: create
        with:
          gistPat: ${{ secrets.GIST_PAT }}
          action: create
          filename: ${{ env.fileName }}
      - name: Download Gist
        uses: ./
        with:
          gistPat: ${{ secrets.GIST_PAT }}
          gistId: ${{ steps.create.outputs.gistId }}
          action: download
          filename: ${{ env.fileName }}
      - run: echo '{a:b}' > $fileName
      - name: Update Gist
        uses: ./
        with:
          gistPat: ${{ secrets.GIST_PAT }}
          gistId: ${{ steps.create.outputs.gistId }}
          action: update
          filename: ${{ env.fileName }}
      - name: Delete Gist
        uses: ./
        with:
          gistPat: ${{ secrets.GIST_PAT }}
          gistId: ${{ steps.create.outputs.gistId }}
          action: delete
          filename: ${{ env.fileName }}
      - name: Download Non-Existent Gist
        id: download
        uses: ./
        with:
          gistPat: ${{ secrets.GIST_PAT }}
          gistId: ${{ steps.create.outputs.gistId }}
          action: download
          filename: ${{ env.fileName }}
          createIfNotExists: true
          fileContent: '{}'
      - name: Delete Gist
        uses: ./
        with:
          gistPat: ${{ secrets.GIST_PAT }}
          gistId: ${{ steps.download.outputs.gistId }}
          action: delete
          filename: ${{ env.fileName }}
